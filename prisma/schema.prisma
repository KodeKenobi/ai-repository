generator client {
    provider = "prisma-client-js"
    output   = "../node_modules/.prisma/client"
    binaryTargets = ["native"]
}

datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

// User management
model User {
  id          String    @id @default(cuid())
  email       String    @unique
  firstName   String?
  lastName    String?
  companyName String?
  password    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Relations
  contentItems     ContentItem[]
  insights         BusinessInsight[]
  consistencyReports ConsistencyReport[]
  gapAnalysisReports GapAnalysisReport[]
  
  @@map("users")
}

// Company/Supplier management
model Company {
  id          String    @id @default(cuid())
  
  // Core Company Data
  name        String    @unique
  tradingName String?   // Brand name
  description String?
  industry    String?
  sector      String?   // Technology, Healthcare, Finance, etc.
  foundedYear Int?
  headquarters String?  // Full address
  country     String?
  size        String?   // Small, Medium, Large, Enterprise
  type        CompanyType @default(SUPPLIER) // SUPPLIER, COMPETITOR, PARTNER, TARGET
  
  // Financial Information
  revenue     String?   // Annual revenue
  marketCap   String?   // Market capitalization
  employeeCount String? // Exact employee numbers
  legalStatus String?   // Public, Private, Startup, etc.
  stockSymbol String?   // If public company
  
  // Leadership & People
  ceo         String?   // CEO name
  keyExecutives Json?   // Array of executives
  founders    String?   // Founder names
  boardMembers Json?    // Board members
  
  // Digital Presence
  website     String?
  linkedin   String?
  twitter     String?
  facebook    String?
  instagram   String?
  youtube     String?
  otherSocial Json?     // Other social platforms
  
  // Contact Information
  phone       String?
  email       String?
  address     String?
  supportEmail String?
  salesEmail  String?
  pressContact String?
  
  // Reviews & Ratings
  glassdoorRating Float?
  googleRating    Float?
  trustpilotScore Float?
  bbbRating       String?
  yelpRating      Float?
  industryReviews Json?   // Industry-specific reviews
  
  // Business Details
  businessModel   String?   // B2B, B2C, SaaS, etc.
  products        Json?     // Array of products/services
  targetMarket    String?
  geographicPresence Json?  // Countries/regions served
  languages       Json?     // Supported languages
  
  // Relationships & Partnerships
  keyPartners     Json?     // Strategic partnerships
  majorClients    Json?     // Notable customers
  suppliers       Json?     // Key suppliers
  competitors     Json?     // Direct competitors
  acquisitions    Json?     // Companies acquired
  subsidiaries    Json?     // Owned companies
  
  // Market Position
  marketShare     String?
  competitiveAdvantage String?
  industryRanking String?
  growthStage     String?   // Startup, Growth, Mature, etc.
  marketTrends    Json?     // Industry trends affecting them
  
  // Media & Press
  recentNews      Json?     // Last 6 months headlines
  pressReleases   Json?     // Recent announcements
  mediaMentions   Json?     // News coverage
  awards          Json?     // Industry awards
  speakingEngagements Json? // CEO/executive appearances
  
  // Technology & Innovation
  technologyStack Json?     // Software/tools used
  patents         Json?     // Patent portfolio
  rdInvestment    String?   // R&D spending
  innovationAreas Json?     // Focus areas
  techPartnerships Json?   // Technology alliances
  
  // Sustainability & Values
  esgScore        String?   // Environmental, Social, Governance
  sustainabilityInitiatives Json? // Green programs
  corporateValues Json?     // Mission, vision, values
  diversityInclusion Json?  // DEI initiatives
  socialImpact    Json?     // Community involvement
  
  // Operational Data
  officeLocations Json?     // All office addresses
  remoteWorkPolicy String?  // Hybrid/remote options
  workCulture     String?   // Company culture description
  benefits        Json?     // Employee benefits
  hiringStatus    String?   // Actively hiring, job openings
  
  // Business Intelligence
  swotAnalysis    Json?     // Strengths, weaknesses, opportunities, threats
  riskFactors     Json?     // Business risks
  growthStrategy  String?   // Expansion plans
  investmentThesis String?  // Why invest/partner
  dueDiligenceNotes Json?   // Key considerations
  
  // Metadata
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Relations
  contentItems     ContentItem[]
  insights         BusinessInsight[]
  
  @@map("companies")
}

// Content management
model ContentItem {
  id          String      @id @default(cuid())
  title       String
  description String?
  contentType ContentType
  source      ContentSource
  sourceUrl   String?     // YouTube URL or Blog URL
  cloudStoragePath String? // S3 key for uploaded files
  fileName    String?     // Original filename for uploads
  fileSize    BigInt?     // File size in bytes
  mimeType    String?     // MIME type for files
  duration    Int?        // Duration in seconds for audio/video
  status      ProcessingStatus @default(PENDING)
  
  // Company association
  companyId   String?
  company     Company?    @relation(fields: [companyId], references: [id], onDelete: SetNull)
  
  // Metadata
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  processedAt DateTime?
  
  // Relations
  userId        String
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transcription Transcription?
  insights      BusinessInsight[]
  
  @@map("content_items")
}

// Transcription storage
model Transcription {
  id        String   @id @default(cuid())
  content   String   // Full transcription text
  language  String?  // Detected language
  confidence Float?  // Transcription confidence score
  wordCount Int?     // Word count
  
  // Timing and metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  contentItemId String      @unique
  contentItem   ContentItem @relation(fields: [contentItemId], references: [id], onDelete: Cascade)
  
  @@map("transcriptions")
}

// AI-powered business insights
model BusinessInsight {
  id          String      @id @default(cuid())
  category    InsightCategory
  title       String
  content     String      // Full insight content
  confidence  Float?      // AI confidence score
  priority    Priority    @default(MEDIUM)
  tags        String?    // Searchable tags (comma-separated)
  
  // Source information
  sourceQuote String?     // Relevant quote from source content
  
  // Company association
  companyId   String?
  company     Company?    @relation(fields: [companyId], references: [id], onDelete: SetNull)
  
  // Metadata
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  // Relations
  userId        String
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  contentItemId String
  contentItem   ContentItem   @relation(fields: [contentItemId], references: [id], onDelete: Cascade)
  
  @@map("business_insights")
}

// Consistency checking results
model ConsistencyReport {
  id          String   @id @default(cuid())
  title       String
  description String
  
  // Contradictions found
  contradictions Json? // Array of contradiction objects with sources
  totalContradictions Int @default(0)
  
  // Metadata
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("consistency_reports")
}

// Gap analysis results
model GapAnalysisReport {
  id          String   @id @default(cuid())
  title       String
  description String
  
  // Identified gaps
  gaps            Json? // Array of gap objects with recommendations
  totalGaps       Int    @default(0)
  priorityGaps    Int    @default(0)
  
  // Recommendations
  recommendations Json? // Array of recommendation objects
  
  // Metadata
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // Relations
  userId          String
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("gap_analysis_reports")
}

// Enums
enum ContentType {
  AUDIO
  VIDEO
  BLOG_ARTICLE
  DOCUMENT
  TEXT
}

enum ContentSource {
  FILE_UPLOAD
  YOUTUBE_URL
  BLOG_URL
  DIRECT_INPUT
}

enum ProcessingStatus {
  PENDING
  TRANSCRIBING
  ANALYZING
  COMPLETED
  FAILED
}

enum InsightCategory {
  BUSINESS_MODEL
  MARKETING
  OPERATIONS
  FINANCIAL
  STRATEGIC
  CUSTOMER
  PRODUCT
  COMPETITIVE
  RISKS
  OPPORTUNITIES
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum CompanyType {
  SUPPLIER
  COMPETITOR
  PARTNER
  TARGET
  CUSTOMER
}
